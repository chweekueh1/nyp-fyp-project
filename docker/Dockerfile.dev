# syntax=docker/dockerfile:1
# Development build - Alpine-friendly with development tools
FROM python:3.11-alpine

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    GRADIO_SERVER_NAME="0.0.0.0" \
    GRADIO_SERVER_PORT="7860" \
    IN_DOCKER="1" \
    DEVELOPMENT="true" \
    DOCKER_MODE="dev" \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    TZ=Asia/Singapore \
    MAKEFLAGS="-j$(nproc)" \
    PYTHONHASHSEED=random \
    PIP_USE_PEP517=1 \
    PIP_PREFER_BINARY=1

# Build arguments
ARG PARALLEL_JOBS=4
ARG VENV_PATH=/home/appuser/.nypai-chatbot/venv-dev

# Set environment variables from build args
ENV PIP_JOBS=${PARALLEL_JOBS} \
    VENV_PATH=${VENV_PATH}

WORKDIR /app

# Install system dependencies for development
RUN apk add --no-cache \
    build-base \
    libffi-dev \
    openssl-dev \
    zlib-dev \
    jpeg-dev \
    freetype-dev \
    libpng-dev \
    libgomp \
    libstdc++ \
    libgcc \
    pandoc-cli \
    poppler-utils \
    tesseract-ocr \
    curl \
    tzdata \
    ca-certificates \
    git \
    imagemagick \
    vim \
    nano \
    netcat-openbsd \
    gzip \
    bzip2 \
    xz \
    procps \
    sysstat \
    fontconfig \
    libx11 \
    libxrender \
    libxext \
    libssl3 \
    freetype \
    && update-ca-certificates \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone

# Create user and directories
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup -s /bin/sh && \
    mkdir -p /home/appuser/.nypai-chatbot/data/cache && \
    mkdir -p /home/appuser/.nypai-chatbot/data/vector_store/chroma_db && \
    mkdir -p /home/appuser/.nypai-chatbot/data/memory_persistence && \
    mkdir -p /home/appuser/.nypai-chatbot/data/nltk_data && \
    mkdir -p /home/appuser/.nypai-chatbot/data/chat_sessions && \
    mkdir -p /home/appuser/.nypai-chatbot/data/user_info && \
    mkdir -p /home/appuser/.nypai-chatbot/data/uploads && \
    mkdir -p /home/appuser/.nypai-chatbot/data/test_uploads && \
    mkdir -p /home/appuser/.nypai-chatbot/data/logs && \
    mkdir -p /app/data && \
    mkdir -p /app/data/memory_persistence && \
    mkdir -p /app/data/keyword && \
    mkdir -p /app/data/chat_sessions && \
    mkdir -p /app/data/reports && \
    mkdir -p /app/docs/modules /app/docs/modules/src && \
    mkdir -p /tmp/nypai-chatbot/sqlite && \
    chown -R appuser:appgroup /app && \
    chown -R appuser:appgroup /home/appuser/.nypai-chatbot && \
    chown -R appuser:appgroup /tmp/nypai-chatbot && \
    # Explicitly set read/write/execute permissions for the owner (appuser) on data directories
    # This ensures appuser has full control over these directories.
    chmod -R 777 /app/data && \
    chmod -R 777 /app/data/memory_persistence && \
    chmod -R 777 /app/data/keyword && \
    chmod -R 777 /app/data/chat_sessions && \
    chmod -R 777 /app/data/reports && \
    chmod -R 777 /home/appuser/.nypai-chatbot/data && \
    chmod -R 777 /home/appuser/.nypai-chatbot/data/memory_persistence && \
    chmod -R 777 /home/appuser/.nypai-chatbot/data/chat_sessions && \
    chmod -R 777 /tmp/nypai-chatbot/sqlite && \
    # Set more general permissions for /app and /home/appuser/.nypai-chatbot
    # (rwx for owner, rx for group/others for directories; rw for owner, r for group/others for files)
    chmod -R 777 /app && \
    chmod -R 777 /home/appuser/.nypai-chatbot

# Switch to non-root user
USER appuser

# Create virtual environment
RUN python3 -m venv ${VENV_PATH}
ENV PATH="${VENV_PATH}/bin:$PATH" \
    PYTHONPATH=/app

# Copy requirements first for better caching
COPY --chown=appuser:appgroup requirements/requirements-dev.txt .

RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    chmod +x $HOME/.local/bin/uv && \
    export PATH="$HOME/.local/bin:$PATH" && \
    ${VENV_PATH}/bin/pip install --upgrade pip wheel setuptools && \
    ${VENV_PATH}/bin/pip install uv && \
    export VIRTUAL_ENV=${VENV_PATH} && \
    uv pip install --upgrade pip wheel setuptools && \
    uv pip install --prerelease=allow -r requirements-dev.txt

# Download NLTK stopwords corpus to the correct directory
RUN ${VENV_PATH}/bin/python -c "import nltk; nltk.download('stopwords', download_dir='/home/appuser/.nypai-chatbot/data/nltk_data')"


# Copy application code
COPY --chown=appuser:appgroup src/ ./src/
COPY --chown=appuser:appgroup data/ ./data/
COPY --chown=appuser:appgroup styles/ ./styles/

# Expose port
EXPOSE 7860

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:7860/ || exit 1

# Set entrypoint and command
CMD ["python", "src/app.py"]

# Print build information
RUN echo "[BUILD] Python executable: ${VENV_PATH}/bin/python" && \
    echo "[BUILD] Python version: $(${VENV_PATH}/bin/python --version)" && \
    echo "[BUILD] Pip version: $(${VENV_PATH}/bin/pip --version)"
